<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="board">
  <!-- 작성 -->
 <insert id="write">
  insert into myBoard(bno, title, content, writer)
      values ((select nvl(max(bno)+1,1) from myboard), #{title}, #{content}, #{writer})
 </insert>
 
 <!-- 상세 -->
 <select id="read" resultType="board">
  select bno, title, content, writer, regDate, viewCnt
   from myBoard
    where bno = #{bno}
 </select>

 <!-- 수정 --> 
 <update id="update">
  update myBoard
   set
    title = #{title},
    content = #{content}
   where bno = #{bno}  
 </update>
 
 <!-- 삭제 -->
 <delete id="delete">
  delete from
   myBoard
  where bno = #{bno}
 </delete>
 
  <!-- 목록 -->
 <select id="list" resultType="board">
  select bno, title, writer, regDate
      from myBoard
          order by bno desc
 </select>
 
 <select id="listpage" resultType="board" parameterType="cri">
 select bno, title, content, writer, regdate, viewcnt from( select bno, title, content, writer, regdate, viewcnt, 
      row_number() over(order by bno desc) as rnum 
      from myboard) mb where rnum between #{rowStart} and #{rowEnd}
      order by bno desc
 </select>
 
 <select id="listCount" resultType="int">
 <![CDATA[
 	select count(bno) from myboard where bno>0
 ]]>
 </select>
 
 <!-- 검색 -->
 <select id="listSearch" resultType="board" parameterType="scri">
 select bno, title, content, writer, regDate, viewCnt from(
 select bno, title, content, writer, regDate, viewCnt, row_number() over(order by bno desc) as rNum 
 from myboard <include refid="search"></include>) mb 
 where rNum between #{rowStart} and #{rowEnd} order by bno desc
 </select>
 
 <!-- 검색 참조 -->
 <sql id="search">
 <if test="searchType != null">
 	<if test="searchType == 't'.toString()"> where title like '%' || #{keyword} || '%'</if>
 	<if test="searchType == 'c'.toString()">where content like '%' || #{keyword} || '%'</if>
 	<if test="searchType == 'w'.toString()">where writer like '%' || #{keyword} || '%'</if>
 	<if test="searchType == 'tc'.toString()">where (title like '%' || #{keyword} || '%') or (content like '%' || #{keyword} || '%')</if>
 </if>
</sql>

<!-- 검색 count -->
<select id="countSearch" resultType="int">
select count(bno) from myboard <include refid="search"></include>
 <![CDATA[ and bno >0]]>
</select>



</mapper>